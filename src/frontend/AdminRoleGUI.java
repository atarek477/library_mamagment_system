package frontend;


import backend.AdminRole;
import backend.LibrarianUser;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
/**
 *
 * @author BLURAY
 */
public class AdminRoleGUI extends javax.swing.JFrame implements Node{
    /**
     * Creates new form Admin
     */
    private Node parent;
    private AdminRole adminrole;
    private AddLibrarian addLibrarian;
    private TabelView tabelView;
    private RemoveLibrarian removeLibrarian;
      
    public AdminRoleGUI() {
        initComponents();
       adminrole = new AdminRole();
       addLibrarian=null;
       tabelView=null;
       removeLibrarian=null;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        AddLibrarian = new javax.swing.JButton();
        view = new javax.swing.JButton();
        RemoveLibrarian = new javax.swing.JButton();
        Logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Admin Role");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Admin section");

        AddLibrarian.setBackground(new java.awt.Color(0, 0, 0));
        AddLibrarian.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        AddLibrarian.setForeground(new java.awt.Color(255, 255, 255));
        AddLibrarian.setText("Add Librarian");
        AddLibrarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLibrarianActionPerformed(evt);
            }
        });

        view.setBackground(new java.awt.Color(0, 0, 0));
        view.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        view.setForeground(new java.awt.Color(255, 255, 255));
        view.setText("view librarian");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        RemoveLibrarian.setBackground(new java.awt.Color(0, 0, 0));
        RemoveLibrarian.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        RemoveLibrarian.setForeground(new java.awt.Color(255, 255, 255));
        RemoveLibrarian.setText("Delete Librarian");
        RemoveLibrarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveLibrarianActionPerformed(evt);
            }
        });

        Logout.setBackground(new java.awt.Color(0, 0, 0));
        Logout.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Logout.setForeground(new java.awt.Color(255, 255, 255));
        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddLibrarian, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(RemoveLibrarian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(view, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(AddLibrarian, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RemoveLibrarian, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed

        if (tabelView==null)
        {
              tabelView = new TabelView(new String[]{"Librarian Id", "Name", "Email", "Address", "Phone Number"});
              tabelView.setTitle("View Librarians");
              tabelView.setParentNode(this);
        }
         this.setVisible(false);
         
         LibrarianUser[]users=adminrole.getListOfLibrarians(); 
         String[][] tabelData=new String [users.length][5];     
        for(int i=0;i<users.length;i++)
        {
            tabelData[i]=users[i].lineRepresentation().split(",");     
            //System.out.println(tabelData[i][0]+tabelData[i][1]+tabelData[i][2]+tabelData[i][3]+tabelData[i][4]);
        }
        tabelView.setData(tabelData);
        tabelView.setVisible(true);

//        LibrarianUser[] data = adminrole.getListOfLibrarians();
//        if (t1 == null) 
//        {
//            t1 = new TableView(new String[]{"id  ", "name ", "email", "country", "phone"});
//            String[][] l1 = new String[data.length][5];
//            String[] user = new String[data.length];
//            for (int i = 0; i < data.length; i++)
//            {
//                user[i] = data[i].lineRepresentation();
//                l1[i] = user[i].split(",");
//            }
//            JFrame jFrame = new JFrame("list ");
//            String[] s1 = {"id  ", "name ", "email", "country", "phone"};
//            JTable jTable = new JTable(l1, s1);
//            jFrame.setSize(1000, 1000);
//            jTable.setBounds(500, 500, 500, 500);
//            JScrollPane jScrollPane = new JScrollPane(jTable);
//            jFrame.add(jScrollPane);
//            this.setVisible(false);
//            jFrame.setVisible(true);
//            jTable.setVisible(true);
//        }
    }//GEN-LAST:event_viewActionPerformed
        
    
   
    private void AddLibrarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLibrarianActionPerformed
        
        if(addLibrarian==null)
        {
            addLibrarian = new AddLibrarian(adminrole);
            addLibrarian.setParentNode(this);
        }
        this.setVisible(false);
        addLibrarian.setVisible(true);
    }//GEN-LAST:event_AddLibrarianActionPerformed

    private void RemoveLibrarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveLibrarianActionPerformed
        
        if(removeLibrarian==null)
        {
            removeLibrarian = new RemoveLibrarian(adminrole);
            removeLibrarian.setParentNode(this);
        }
        this.setVisible(false);
        removeLibrarian.setVisible(true);
    }//GEN-LAST:event_RemoveLibrarianActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed

        try {
            adminrole.logout();
        } catch (IOException ex) {
            Logger.getLogger(AdminRoleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
           ((JFrame)getParentNode()).setVisible(true);
            this.setVisible(false);
            
    }//GEN-LAST:event_LogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRoleGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddLibrarian;
    private javax.swing.JButton Logout;
    private javax.swing.JButton RemoveLibrarian;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables

    @Override
    public Node getParentNode() {
 return parent;
    }

    @Override
    public void setParentNode(Node node) {
        this.parent=node;

    }
}
